# Generated by Django 3.1.4 on 2022-05-10 15:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('user_type', models.CharField(choices=[('admin', 'admin'), ('owner', 'owner'), ('employee', 'employee')], default='employee', max_length=8)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email ID')),
                ('is_email_verified', models.BooleanField(default=False)),
                ('email_verified_time', models.DateTimeField(blank=True, null=True)),
                ('mobile', models.BigIntegerField(default=0)),
                ('is_mobile_verified', models.BooleanField(default=False)),
                ('mobile_verified_time', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Email User',
                'verbose_name_plural': 'Email Users',
            },
            managers=[
                ('objects', users.managers.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='MobileToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('mobile', models.BigIntegerField()),
                ('token', models.CharField(max_length=6)),
                ('expiry', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('used_time', models.DateTimeField(blank=True, null=True)),
                ('email_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mobile_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Mobile Token',
                'verbose_name_plural': 'Mobile Tokens',
            },
        ),
        migrations.CreateModel(
            name='EmailToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('token', models.UUIDField()),
                ('expiry', models.DateTimeField()),
                ('is_used', models.BooleanField(default=False)),
                ('category', models.CharField(choices=[('signup', 'signup'), ('reset', 'reset')], default='signup', max_length=6)),
                ('used_time', models.DateTimeField(blank=True, null=True)),
                ('email_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='password_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Password Token',
                'verbose_name_plural': 'Password Tokens',
                'unique_together': {('email_user', 'token')},
            },
        ),
    ]
